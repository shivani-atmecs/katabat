package com.cmc.credagility.core.domain.base;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MappedSuperclass;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Index;
import org.hibernate.annotations.Type;

import com.cmc.credagility.core.domain.account.Account;
import com.cmc.credagility.core.domain.event.EventInstance;
import com.cmc.credagility.core.domain.responsible.Responsible;
import com.cmc.credagility.core.domain.type.ChannelResultStatus;
import com.cmc.credagility.core.domain.webactivity.Session;

import com.ozstrategy.credagility.core.domain.Node;
import com.ozstrategy.credagility.core.domain.SurveyFlowStep;
import com.ozstrategy.credagility.core.domain.workflow.WorkflowNodeActionTriggerType;


/**
 * Created by yongliu on 2/17/17.
 *
 * @author   <a href="mailto:yong.liu@ozstrategy.com">Yong Liu</a>
 * @version  02/17/2017 13:54
 */

@MappedSuperclass public abstract class AbstractBaseActionResult extends CreatorEntity {
  //~ Static fields/initializers ---------------------------------------------------------------------------------------

  private static final long serialVersionUID = 6839018181304342600L;

  //~ Instance fields --------------------------------------------------------------------------------------------------

  /** Account. */
  @JoinColumn(
    name      = "accountNum",
    updatable = false
  )
  @ManyToOne(fetch = FetchType.LAZY)
  protected Account account;

  /** DOCUMENT ME! */
  @Column
  @Type(type = "yes_no")
  protected Boolean         deltaBatch = Boolean.FALSE;

  /** DOCUMENT ME! */
  @Column(name = "executeDate")
  @Temporal(TemporalType.TIMESTAMP)
  protected Date executeDate;

  /** DOCUMENT ME! */
  @Transient protected String executeResult;

  /** DOCUMENT ME! */
  @JoinColumn(
    name     = "executionInstanceId",
    nullable = true
  )
  @ManyToOne(fetch = FetchType.LAZY)
  protected EventInstance executionInstance;

  /** DOCUMENT ME! */
  @Column(name = "expectedExportDate")
  @Temporal(TemporalType.TIMESTAMP)
  protected Date expectedExportDate;

  /** DOCUMENT ME! */
  @Column(name = "exportDate")
  @Temporal(TemporalType.TIMESTAMP)
  protected Date exportDate;

  /** DOCUMENT ME! */
  @JoinColumn(name = "nodeId")
  @ManyToOne(fetch = FetchType.LAZY)
  protected Node node;

  /** Responsible. */
  @JoinColumn(name = "responsibleId")
  @ManyToOne(fetch = FetchType.LAZY)
  protected Responsible responsible;

  /** DOCUMENT ME! */
  @Column(name = "ruleBatchId")
  protected Long ruleBatchId;

  /** DOCUMENT ME! */
  @JoinColumn(
    name      = "sessionId",
    updatable = false,
    nullable  = true
  )
  @ManyToOne(fetch = FetchType.LAZY)
  protected Session session;

  /** Whether this is generated by strategy or CID. */
  @Column(
    name   = "source",
    length = 20
  )
  protected String source = "STRATEGY";

  // Added Not Null Constraint
  /** channel result status INIT/ EXPORTED/ EXECUTED. */
  @Column(
    name     = "status",
    nullable = false,
    length   = 10
  )
  @Enumerated(value = EnumType.STRING)
  protected ChannelResultStatus status;

  /** TODO: DOCUMENT ME! */
  @Column(
    name   = "statusDescription",
    length = 20
  )
  protected String statusDescription;

  /** Strategy date. */
  @Column(
    name     = "strategyDate",
    nullable = false
  )
  @Temporal(TemporalType.TIMESTAMP)
  protected Date strategyDate;

  /** DOCUMENT ME! */
  @Column(
    name     = "surveyFlowMode",
    length   = 32,
    nullable = true
  )
  @Enumerated(value = EnumType.STRING)
  protected WorkflowNodeActionTriggerType surveyFlowMode;

  /** DOCUMENT ME! */
  @JoinColumn(
    name     = "surveyFlowStepId",
    nullable = true
  )
  @ManyToOne(fetch = FetchType.LAZY)
  protected SurveyFlowStep surveyFlowStep;

  //~ Methods ----------------------------------------------------------------------------------------------------------

  /**
   * @see  com.cmc.credagility.core.domain.base.BaseEntity#equals(java.lang.Object)
   */
  @Override public boolean equals(Object o) {
    if (this == o) {
      return true;
    }

    if ((o == null) || (getClass() != o.getClass())) {
      return false;
    }

    if (!super.equals(o)) {
      return false;
    }

    AbstractBaseActionResult that = (AbstractBaseActionResult) o;

    if ((account != null) ? (!account.equals(that.account)) : (that.account != null)) {
      return false;
    }

    if ((deltaBatch != null) ? (!deltaBatch.equals(that.deltaBatch)) : (that.deltaBatch != null)) {
      return false;
    }

    if ((executeDate != null) ? (!executeDate.equals(that.executeDate)) : (that.executeDate != null)) {
      return false;
    }

    if ((executeResult != null) ? (!executeResult.equals(that.executeResult)) : (that.executeResult != null)) {
      return false;
    }

    if ((executionInstance != null) ? (!executionInstance.equals(that.executionInstance))
                                    : (that.executionInstance != null)) {
      return false;
    }

    if ((expectedExportDate != null) ? (!expectedExportDate.equals(that.expectedExportDate))
                                     : (that.expectedExportDate != null)) {
      return false;
    }

    if ((exportDate != null) ? (!exportDate.equals(that.exportDate)) : (that.exportDate != null)) {
      return false;
    }

    if ((node != null) ? (!node.equals(that.node)) : (that.node != null)) {
      return false;
    }

    if ((responsible != null) ? (!responsible.equals(that.responsible)) : (that.responsible != null)) {
      return false;
    }

    if ((ruleBatchId != null) ? (!ruleBatchId.equals(that.ruleBatchId)) : (that.ruleBatchId != null)) {
      return false;
    }

    if ((session != null) ? (!session.equals(that.session)) : (that.session != null)) {
      return false;
    }

    if ((source != null) ? (!source.equals(that.source)) : (that.source != null)) {
      return false;
    }

    if (status != that.status) {
      return false;
    }

    if ((statusDescription != null) ? (!statusDescription.equals(that.statusDescription))
                                    : (that.statusDescription != null)) {
      return false;
    }

    if ((strategyDate != null) ? (!strategyDate.equals(that.strategyDate)) : (that.strategyDate != null)) {
      return false;
    }

    if (surveyFlowMode != that.surveyFlowMode) {
      return false;
    }

    return (surveyFlowStep != null) ? surveyFlowStep.equals(that.surveyFlowStep) : (that.surveyFlowStep == null);

  } // end method equals

  //~ ------------------------------------------------------------------------------------------------------------------


  /**
   * getter method for account.
   *
   * @return  Account
   */
  public Account getAccount() {
    return account;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for delta batch.
   *
   * @return  Boolean
   */
  public Boolean getDeltaBatch() {
    return deltaBatch;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for execute date.
   *
   * @return  Date
   */
  public Date getExecuteDate() {
    return executeDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for execute result.
   *
   * @return  String
   */
  public String getExecuteResult() {
    return executeResult;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for execution instance.
   *
   * @return  EventInstance
   */
  public EventInstance getExecutionInstance() {
    return executionInstance;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for expected export date.
   *
   * @return  Date
   */
  public Date getExpectedExportDate() {
    return expectedExportDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for export date.
   *
   * @return  Date
   */
  public Date getExportDate() {
    return exportDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for node.
   *
   * @return  Node
   */
  public Node getNode() {
    return node;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for responsible.
   *
   * @return  Responsible
   */
  public Responsible getResponsible() {
    return responsible;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for rule batch id.
   *
   * @return  Long
   */
  public Long getRuleBatchId() {
    return ruleBatchId;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for session.
   *
   * @return  Session
   */
  public Session getSession() {
    return session;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for source.
   *
   * @return  String
   */
  public String getSource() {
    return source;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for status.
   *
   * @return  ChannelResultStatus
   */
  public ChannelResultStatus getStatus() {
    return status;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for status description.
   *
   * @return  String
   */
  public String getStatusDescription() {
    return statusDescription;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for strategy date.
   *
   * @return  Date
   */
  public Date getStrategyDate() {
    return strategyDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for survey flow mode.
   *
   * @return  WorkflowNodeActionTriggerType
   */
  public WorkflowNodeActionTriggerType getSurveyFlowMode() {
    return surveyFlowMode;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * getter method for survey flow step.
   *
   * @return  SurveyFlowStep
   */
  public SurveyFlowStep getSurveyFlowStep() {
    return surveyFlowStep;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * @see  com.cmc.credagility.core.domain.base.BaseEntity#hashCode()
   */
  @Override public int hashCode() {
    int result = super.hashCode();
    result = (31 * result) + ((account != null) ? account.hashCode() : 0);
    result = (31 * result) + ((deltaBatch != null) ? deltaBatch.hashCode() : 0);
    result = (31 * result) + ((executeDate != null) ? executeDate.hashCode() : 0);
    result = (31 * result) + ((executeResult != null) ? executeResult.hashCode() : 0);
    result = (31 * result) + ((executionInstance != null) ? executionInstance.hashCode() : 0);
    result = (31 * result) + ((expectedExportDate != null) ? expectedExportDate.hashCode() : 0);
    result = (31 * result) + ((exportDate != null) ? exportDate.hashCode() : 0);
    result = (31 * result) + ((node != null) ? node.hashCode() : 0);
    result = (31 * result) + ((responsible != null) ? responsible.hashCode() : 0);
    result = (31 * result) + ((ruleBatchId != null) ? ruleBatchId.hashCode() : 0);
    result = (31 * result) + ((session != null) ? session.hashCode() : 0);
    result = (31 * result) + ((source != null) ? source.hashCode() : 0);
    result = (31 * result) + ((status != null) ? status.hashCode() : 0);
    result = (31 * result) + ((statusDescription != null) ? statusDescription.hashCode() : 0);
    result = (31 * result) + ((strategyDate != null) ? strategyDate.hashCode() : 0);
    result = (31 * result) + ((surveyFlowMode != null) ? surveyFlowMode.hashCode() : 0);
    result = (31 * result) + ((surveyFlowStep != null) ? surveyFlowStep.hashCode() : 0);

    return result;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for account.
   *
   * @param  account  Account
   */
  public void setAccount(Account account) {
    this.account = account;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for delta batch.
   *
   * @param  deltaBatch  Boolean
   */
  public void setDeltaBatch(Boolean deltaBatch) {
    this.deltaBatch = deltaBatch;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for execute date.
   *
   * @param  executeDate  Date
   */
  public void setExecuteDate(Date executeDate) {
    this.executeDate = executeDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for execute result.
   *
   * @param  executeResult  String
   */
  public void setExecuteResult(String executeResult) {
    this.executeResult = executeResult;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for execution instance.
   *
   * @param  executionInstance  EventInstance
   */
  public void setExecutionInstance(EventInstance executionInstance) {
    this.executionInstance = executionInstance;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for expected export date.
   *
   * @param  expectedExportDate  Date
   */
  public void setExpectedExportDate(Date expectedExportDate) {
    this.expectedExportDate = expectedExportDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for export date.
   *
   * @param  exportDate  Date
   */
  public void setExportDate(Date exportDate) {
    this.exportDate = exportDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for node.
   *
   * @param  node  Node
   */
  public void setNode(Node node) {
    this.node = node;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for responsible.
   *
   * @param  responsible  Responsible
   */
  public void setResponsible(Responsible responsible) {
    this.responsible = responsible;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for rule batch id.
   *
   * @param  ruleBatchId  Long
   */
  public void setRuleBatchId(Long ruleBatchId) {
    this.ruleBatchId = ruleBatchId;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for session.
   *
   * @param  session  Session
   */
  public void setSession(Session session) {
    this.session = session;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for source.
   *
   * @param  source  String
   */
  public void setSource(String source) {
    this.source = source;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for status.
   *
   * @param  status  ChannelResultStatus
   */
  public void setStatus(ChannelResultStatus status) {
    this.status = status;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for status description.
   *
   * @param  statusDescription  String
   */
  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for strategy date.
   *
   * @param  strategyDate  Date
   */
  public void setStrategyDate(Date strategyDate) {
    this.strategyDate = strategyDate;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for survey flow mode.
   *
   * @param  surveyFlowMode  WorkflowNodeActionTriggerType
   */
  public void setSurveyFlowMode(WorkflowNodeActionTriggerType surveyFlowMode) {
    this.surveyFlowMode = surveyFlowMode;
  }

  //~ ------------------------------------------------------------------------------------------------------------------

  /**
   * setter method for survey flow step.
   *
   * @param  surveyFlowStep  SurveyFlowStep
   */
  public void setSurveyFlowStep(SurveyFlowStep surveyFlowStep) {
    this.surveyFlowStep = surveyFlowStep;
  }
} // end class AbstractBaseActionResult
